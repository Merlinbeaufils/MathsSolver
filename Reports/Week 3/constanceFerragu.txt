{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This week, I continued fixing the outer structure of the AbstractFunction class, and the .solve() function. I then worked with Jean-Paul on how to implement the step-by-step solver for derivatives. Because of the way we have implemented our AbstractFunction Class, our current .solve() function already solves the derivative step-by-step as it is a recursive function. Now we are left to implement a testing system for the .solve() function, and for the derivative team as a whole, we have to put all our work together, and start debugging.  }